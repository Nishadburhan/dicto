{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/navaba/navaba.component.css","webpack:///./src/app/components/navaba/navaba.component.html","webpack:///./src/app/components/navaba/navaba.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/discuss/discuss.component.css","webpack:///./src/app/discuss/discuss.component.html","webpack:///./src/app/discuss/discuss.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/manage/manage.component.css","webpack:///./src/app/manage/manage.component.html","webpack:///./src/app/manage/manage.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/discussion/discusson.service.ts","webpack:///./src/app/services/manage/manage.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/app/sidebar/sidebar.component.css","webpack:///./src/app/sidebar/sidebar.component.html","webpack:///./src/app/sidebar/sidebar.component.ts","webpack:///./src/app/suggestions/suggestions.component.css","webpack:///./src/app/suggestions/suggestions.component.html","webpack:///./src/app/suggestions/suggestions.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ang-src';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AppComponent } from './app.component';\nimport { NavabaComponent } from './components/navaba/navaba.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { FlashMessagesModule, FlashMessagesService } from \"angular2-flash-messages\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrModule, ToastContainerModule } from 'ngx-toastr';\nimport { SweetAlert2Module } from '@toverux/ngx-sweetalert2';\n\n// Services\nimport { ValidateService } from \"./services/validate.service\";\nimport { AuthService } from \"./services/auth.service\";\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\nimport { ManageService } from \"./services/manage/manage.service\";\n\n// Auth Guard\nimport { AuthGuard } from \"./guards/auth.guard\";\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { ManageComponent } from './manage/manage.component';\nimport { ClipboardModule } from 'ngx-clipboard';\nimport { SuggestionsComponent } from './suggestions/suggestions.component';\nimport { DiscussComponent } from './discuss/discuss.component';\n\n// Routes\nconst appRoutes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] },\n  { path: 'manage', component: ManageComponent, canActivate: [AuthGuard] },\n  { path: 'discuss', component: DiscussComponent, canActivate: [AuthGuard] }  \n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavabaComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent,\n    SidebarComponent,\n    ManageComponent,\n    SuggestionsComponent,\n    DiscussComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    ToastrModule.forRoot({ preventDuplicates: true, }),\n    SweetAlert2Module.forRoot(),\n    ToastContainerModule,\n    RouterModule.forRoot(appRoutes),\n    FlashMessagesModule,\n    BrowserAnimationsModule,\n    ClipboardModule,\n    NgbModule\n  ],\n  providers: [\n    ValidateService,\n    FlashMessagesService,\n    AuthService,\n    JwtHelperService,\n    AuthGuard,\n    ManageService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navaba',\n  templateUrl: './navaba.component.html',\n  styleUrls: ['./navaba.component.css']\n})\nexport class NavabaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"body {\\r\\n    font-size: .875rem;\\r\\n  }\\r\\n  \\r\\n  .feather {\\r\\n    width: 16px;\\r\\n    height: 16px;\\r\\n    vertical-align: text-bottom;\\r\\n  }\\r\\n  \\r\\n  /*\\r\\n   * Sidebar\\r\\n   */\\r\\n  \\r\\n  .sidebar {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    z-index: 100; /* Behind the navbar */\\r\\n    padding: 48px 0 0; /* Height of navbar */\\r\\n    box-shadow: inset -1px 0 0 rgba(0, 0, 0, .1);\\r\\n  }\\r\\n  \\r\\n  .sidebar-sticky {\\r\\n    position: relative;\\r\\n    top: 0;\\r\\n    height: calc(100vh - 48px);\\r\\n    padding-top: .5rem;\\r\\n    overflow-x: hidden;\\r\\n    overflow-y: auto; /* Scrollable contents if viewport is shorter than content. */\\r\\n  }\\r\\n  \\r\\n  @supports ((position: -webkit-sticky) or (position: sticky)) {\\r\\n    .sidebar-sticky {\\r\\n      position: -webkit-sticky;\\r\\n      position: sticky;\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  .sidebar .nav-link {\\r\\n    font-weight: 500;\\r\\n    color: #333;\\r\\n  }\\r\\n  \\r\\n  .sidebar .nav-link .feather {\\r\\n    margin-right: 4px;\\r\\n    color: #999;\\r\\n  }\\r\\n  \\r\\n  .sidebar .nav-link.active {\\r\\n    color: #007bff;\\r\\n  }\\r\\n  \\r\\n  .sidebar .nav-link:hover .feather,\\r\\n  .sidebar .nav-link.active .feather {\\r\\n    color: inherit;\\r\\n  }\\r\\n  \\r\\n  .sidebar-heading {\\r\\n    font-size: .75rem;\\r\\n    text-transform: uppercase;\\r\\n  }\\r\\n  \\r\\n  /*\\r\\n   * Content\\r\\n   */\\r\\n  \\r\\n  [role=\\\"main\\\"] {\\r\\n    padding-top: 48px; /* Space for fixed navbar */\\r\\n  }\\r\\n  \\r\\n  /*\\r\\n   * Navbar\\r\\n   */\\r\\n  \\r\\n  .navbar-brand {\\r\\n    padding-top: .75rem;\\r\\n    padding-bottom: .75rem;\\r\\n    font-size: 1rem;\\r\\n    background-color: rgba(0, 0, 0, .25);\\r\\n    box-shadow: inset -1px 0 0 rgba(0, 0, 0, .25);\\r\\n  }\\r\\n  \\r\\n  .navbar .form-control {\\r\\n    padding: .75rem 1rem;\\r\\n    border-width: 0;\\r\\n    border-radius: 0;\\r\\n  }\\r\\n  \\r\\n  .form-control-dark {\\r\\n    color: #fff;\\r\\n    background-color: rgba(255, 255, 255, .1);\\r\\n    border-color: rgba(255, 255, 255, .1);\\r\\n  }\\r\\n  \\r\\n  .form-control-dark:focus {\\r\\n    border-color: transparent;\\r\\n    box-shadow: 0 0 0 3px rgba(255, 255, 255, .25);\\r\\n  }\\r\\n  \\r\\n  .item-copy{\\r\\n    cursor: pointer;\\r\\n  }\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <!-- SideBar -->\\n    <app-sidebar></app-sidebar>\\n    <!-- Sidebar -->\\n\\n    <main role=\\\"main\\\" class=\\\"col-md-9 ml-sm-auto col-lg-10 px-4\\\">\\n      <div class=\\\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3\\\">\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"jumbotron text-center\\\">\\n            <h1 class=\\\"display-4\\\">Search For Word!</h1>\\n\\n            <form (submit)=\\\"findMeaning()\\\">\\n              <p class=\\\"lead\\\">\\n                <!-- <input class=\\\"form-control w-100\\\" type=\\\"search\\\" [(ngModel)]=\\\"word\\\" name=\\\"word\\\" placeholder=\\\"Search\\\"\\n                  aria-label=\\\"Search\\\"> -->\\n                <input id=\\\"typeahead-basic\\\" type=\\\"search\\\" class=\\\"form-control w-100\\\" (selectItem)=\\\"selectedItem($event)\\\"\\n                  [(ngModel)]=\\\"wordsArry\\\" placeholder=\\\"Search\\\" name=\\\"word\\\" [ngbTypeahead]=\\\"search\\\" aria-label=\\\"Search\\\">\\n              </p>\\n              <!-- <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-lg\\\">Search</button> -->\\n            </form>\\n\\n            <div class=\\\"panel panel-default\\\">\\n              <!-- List group -->\\n              <ul class=\\\"list-group\\\">\\n                <li class=\\\"list-group-item item-copy\\\" ngxClipboard [cbContent]=\\\"tag.word\\\" *ngFor=\\\"let tag of tags\\\" (click)=\\\"copyToclipBoard(tag.word)\\\">\\n                  {{tag.word}} | <i class=\\\"fa fa-copy\\\"></i></li>\\n              </ul>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n          <!-- <div class=\\\"jumbotron text-center\\\" style=\\\"padding-top:5px;\\\"> -->\\n          <h6 class=\\\"display-4\\\">Your Suggestions</h6>\\n          <div class=\\\"table-responsive\\\" style=\\\"overflow: auto; max-height: 180px;\\\">\\n            <table class=\\\"table table-striped table-sm\\\">\\n              <thead>\\n                <th>Word</th>\\n                <th class=\\\"text-center\\\">Status</th>\\n              </thead>\\n              <tbody>\\n                <tr *ngIf=\\\"suggestions.length==0\\\">\\n                  <td colspan=\\\"2\\\">\\n                    You have made no suggestions!\\n                  </td>\\n                </tr>\\n                <tr *ngFor=\\\"let word of suggestions\\\">\\n\\n                  <td>\\n                    {{word.word}}\\n                  </td>\\n                  <td class=\\\"text-center\\\">\\n                    <span class=\\\"badge badge-warning\\\" *ngIf=\\\"word.status==0\\\">Pending</span>\\n                    <span class=\\\"badge badge-success\\\" *ngIf=\\\"word.status==1\\\">Accepted</span>\\n                    <span class=\\\"badge badge-danger\\\" *ngIf=\\\"word.status==2\\\">Rejected</span>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n          <!-- </div> -->\\n        </div>\\n      </div>\\n    </main>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AuthService } from \"../services/auth.service\";\nimport { ManageService } from '../services/manage/manage.service'\nimport { ToastContainerDirective, ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\nimport swal from 'sweetalert2';\nconst wordsArry: string[] = [];\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  @ViewChild(ToastContainerDirective) toastContainer: ToastContainerDirective;\n  wordsArry: string;\n  tags: string[] = [];\n  suggestions:any[]=[];\n  public words: any;\n  locStorage:any=JSON.parse(localStorage.getItem('user'));\n\n\n\n  search = (text$: Observable<string>) =>\n    text$.pipe(\n      debounceTime(200),\n      distinctUntilChanged(),\n      map(term => term.length < 2 ? []\n        : wordsArry.filter(v => v.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10))\n    )\n\n  constructor(\n    private auth: AuthService,\n    private service: ManageService,\n    private toast: ToastrService\n  ) {\n    this.service.getAllWords().subscribe(words => {\n      for (let word of words) {\n        wordsArry.push(word.word);\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.service.getAllSuggetionsByEmail({email:this.locStorage.email}).subscribe(suggestions => {\n      this.suggestions = suggestions;\n    });\n  }\n\n  findMeaning() {\n    const word = {\n      word: this.wordsArry\n    }\n\n    this.service.findWordByName(word).subscribe(data => {\n      if (data.success) {\n        this.tags = data.tags;\n      } else {\n        const suggest = {\n          word: this.wordsArry,\n          email:this.locStorage.email,\n          status:0\n        }\n        this.toast.error(data.msg, 'Suggestion', { positionClass: 'toast-top-right', timeOut: 1000 });\n        swal({\n          title: 'Word Not Found!',\n          html: '<b style=\"font-weight:700\">[' + this.wordsArry + ']</b> : Make a word suggestion!',\n          type: 'error',\n          showCancelButton: true,\n          confirmButtonColor: '#3085d6',\n          cancelButtonColor: '#d33',\n          confirmButtonText: 'Suggest'\n        }).then((result) => {\n          if (result.value) {\n            this.service.makeSuggetion(suggest).subscribe(data => {\n              if (data.success) {\n                this.wordsArry='';\n                this.ngOnInit();\n                this.toast.success(data.msg, 'Suggestion', { positionClass: 'toast-top-right'});\n              } else {\n                this.toast.error(data.msg, 'Suggestion', { positionClass: 'toast-top-right'});\n              }\n            })\n\n          }\n        })\n      }\n\n    })\n  }\n\n  // Search On Selected\n  selectedItem(item) {\n    const word = {\n      word: item.item\n    }\n    // console.log(word);return;\n\n    this.service.findWordByName(word).subscribe(data => {\n      // this.tags=data.tags;\n      // console.log(data.success);return;\n\n      if (data.success) {\n        this.tags = data.tags;\n      } else {\n        // this.flashMsg.show(data.msg, { cssClass: 'alert-danger', timeout: 3000 });\n      }\n\n    })\n  }\n\n  copyToclipBoard(tag) {\n    this.toast.success('Copied to clipboard', 'Copy', {positionClass:'toast-top-center', timeOut:1000});\n  }\n}\n","module.exports = \"body {\\r\\n    background-color: #eeeeee;\\r\\n}\\r\\n\\r\\n.h7 {\\r\\n    font-size: 0.8rem;\\r\\n}\\r\\n\\r\\n.gedf-wrapper {\\r\\n    margin-top: 0.97rem;\\r\\n}\\r\\n\\r\\n@media (min-width: 992px) {\\r\\n    .gedf-main {\\r\\n        padding-left: 4rem;\\r\\n        padding-right: 4rem;\\r\\n    }\\r\\n    .gedf-card {\\r\\n        margin-bottom: 2.77rem;\\r\\n    }\\r\\n}\\r\\n\\r\\n/**Reset Bootstrap*/\\r\\n\\r\\n.dropdown-toggle::after {\\r\\n    content: none;\\r\\n    display: none;\\r\\n}\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <!-- SideBar -->\\n    <app-sidebar></app-sidebar>\\n    <!-- Sidebar -->\\n\\n    <main role=\\\"main\\\" class=\\\"col-md-9 ml-sm-auto col-lg-10 px-4\\\">\\n      <div class=\\\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3\\\">\\n      </div>\\n      <!-- <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <h1 class=\\\"display-4\\\">Start Discussions!</h1>\\n          <form (submit)=\\\"createSubject()\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control new-tagText\\\" [(ngModel)]=\\\"newSubject\\\" name=\\\"newSubject\\\" placeholder=\\\"New Subject...\\\">\\n          </form>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <dl *ngFor=\\\"let disc of allSubjects\\\">\\n            <dt>{{disc.subject}}</dt>\\n            <dd>...</dd>\\n          </dl>\\n        </div>\\n      </div> -->\\n      <div class=\\\"container-fluid gedf-wrapper\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-9 gedf-main\\\">\\n\\n            <!--- \\\\\\\\\\\\\\\\\\\\\\\\\\\\Post-->\\n            <div class=\\\"card gedf-card\\\">\\n              <div class=\\\"card-header\\\">\\n                <ul class=\\\"nav nav-tabs card-header-tabs\\\" id=\\\"myTab\\\" role=\\\"tablist\\\">\\n                  <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link active\\\" id=\\\"posts-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#posts\\\" role=\\\"tab\\\" aria-controls=\\\"posts\\\"\\n                      aria-selected=\\\"true\\\">Create\\n                      new subject</a>\\n                  </li>\\n                  <!-- <li class=\\\"nav-item\\\">\\n                                  <a class=\\\"nav-link\\\" id=\\\"images-tab\\\" data-toggle=\\\"tab\\\" role=\\\"tab\\\" aria-controls=\\\"images\\\" aria-selected=\\\"false\\\" href=\\\"#images\\\">Images</a>\\n                              </li> -->\\n                </ul>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <form (submit)=\\\"createSubject()\\\">\\n                  <div class=\\\"tab-content\\\" id=\\\"myTabContent\\\">\\n                    <div class=\\\"tab-pane fade show active\\\" id=\\\"posts\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"posts-tab\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label class=\\\"sr-only\\\" for=\\\"message\\\">post</label>\\n                        <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"newSubject\\\" name=\\\"newSubject\\\" id=\\\"message\\\" rows=\\\"3\\\" placeholder=\\\"What are you thinking?\\\"></textarea>\\n                      </div>\\n\\n                    </div>\\n                    <!-- <div class=\\\"tab-pane fade\\\" id=\\\"images\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"images-tab\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <div class=\\\"custom-file\\\">\\n                        <input type=\\\"file\\\" class=\\\"custom-file-input\\\" id=\\\"customFile\\\">\\n                        <label class=\\\"custom-file-label\\\" for=\\\"customFile\\\">Upload image</label>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"py-4\\\"></div>\\n                  </div> -->\\n                  </div>\\n                  <div class=\\\"btn-toolbar justify-content-between\\\">\\n                    <div class=\\\"btn-group\\\">\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">share</button>\\n                    </div>\\n                    <!-- <div class=\\\"btn-group\\\">\\n                    <button id=\\\"btnGroupDrop1\\\" type=\\\"button\\\" class=\\\"btn btn-link dropdown-toggle\\\" data-toggle=\\\"dropdown\\\"\\n                      aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                      <i class=\\\"fa fa-globe\\\"></i>\\n                    </button>\\n                    <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"btnGroupDrop1\\\">\\n                      <a class=\\\"dropdown-item\\\" href=\\\"#\\\"><i class=\\\"fa fa-globe\\\"></i> Public</a>\\n                      <a class=\\\"dropdown-item\\\" href=\\\"#\\\"><i class=\\\"fa fa-users\\\"></i> Friends</a>\\n                      <a class=\\\"dropdown-item\\\" href=\\\"#\\\"><i class=\\\"fa fa-user\\\"></i> Just me</a>\\n                    </div>\\n                  </div> -->\\n                  </div>\\n                </form>\\n              </div>\\n            </div>\\n            <!-- Post /////-->\\n\\n            <!--- \\\\\\\\\\\\\\\\\\\\\\\\\\\\Post-->\\n            <div class=\\\"card gedf-card\\\" *ngFor=\\\"let disc of allSubjects\\\">\\n              <div class=\\\"card-header\\\">\\n                <div class=\\\"d-flex justify-content-between align-items-center\\\">\\n                  <div class=\\\"d-flex justify-content-between align-items-center\\\">\\n                    <div class=\\\"mr-2\\\">\\n                      <img class=\\\"rounded-circle\\\" width=\\\"45\\\" src=\\\"https://picsum.photos/50/50\\\" alt=\\\"\\\">\\n                    </div>\\n                    <div class=\\\"ml-2\\\">\\n                      <div class=\\\"h5 m-0\\\">{{disc.email}}</div>\\n                      <div class=\\\"h7 text-muted\\\">Miracles Lee Cross</div>\\n                    </div>\\n                  </div>\\n                  <div>\\n                    <div class=\\\"dropdown\\\">\\n                      <button class=\\\"btn btn-link dropdown-toggle\\\" type=\\\"button\\\" id=\\\"gedf-drop1\\\" data-toggle=\\\"dropdown\\\"\\n                        aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                        <i class=\\\"fa fa-ellipsis-h\\\"></i>\\n                      </button>\\n                      <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"gedf-drop1\\\">\\n                        <div class=\\\"h6 dropdown-header\\\">Configuration</div>\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Save</a>\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Hide</a>\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Report</a>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <div class=\\\"text-muted h7 mb-2\\\"> <i class=\\\"fa fa-clock-o\\\"></i>10 min ago</div>\\n                <a class=\\\"card-link\\\" href=\\\"#\\\">\\n                  <h5 class=\\\"card-title\\\">{{disc.subject}}</h5>\\n                </a>\\n\\n                <p class=\\\"card-text\\\">\\n                  Lorem ipsum dolor sit amet consectetur adipisicing elit. Quo recusandae nulla rem eos ipsa\\n                  praesentium esse magnam nemo dolor\\n                  sequi fuga quia quaerat cum, obcaecati hic, molestias minima iste voluptates.\\n                </p>\\n              </div>\\n              <div class=\\\"card-footer\\\">\\n                <a href=\\\"#\\\" class=\\\"card-link\\\"><i class=\\\"fa fa-gittip\\\"></i> Like</a>\\n                <a href=\\\"#\\\" class=\\\"card-link\\\"><i class=\\\"fa fa-comment\\\"></i> Comment</a>\\n                <a href=\\\"#\\\" class=\\\"card-link\\\"><i class=\\\"fa fa-mail-forward\\\"></i> Share</a>\\n              </div>\\n            </div>\\n            <!-- Post /////-->\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-body\\\">\\n                <div class=\\\"h5\\\">{{userEmail}}</div>\\n                <div class=\\\"h7 text-muted\\\">Username : {{locStorage.username}}</div>\\n                <div class=\\\"h7\\\">Developer of web applications, JavaScript, PHP, Java, Python, Ruby, Java, Node.js,\\n                  etc.\\n                </div>\\n              </div>\\n              <ul class=\\\"list-group list-group-flush\\\">\\n                <li class=\\\"list-group-item\\\">\\n                  <div class=\\\"h6 text-muted\\\">Followers</div>\\n                  <div class=\\\"h5\\\">5.2342</div>\\n                </li>\\n                <li class=\\\"list-group-item\\\">\\n                  <div class=\\\"h6 text-muted\\\">Following</div>\\n                  <div class=\\\"h5\\\">6758</div>\\n                </li>\\n                <li class=\\\"list-group-item\\\">Vestibulum at eros</li>\\n              </ul>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </main>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { DiscussonService } from \"../services/discussion/discusson.service\";\nimport { ToastrService } from \"ngx-toastr\";\n\n@Component({\n  selector: 'app-discuss',\n  templateUrl: './discuss.component.html',\n  styleUrls: ['./discuss.component.css']\n})\nexport class DiscussComponent implements OnInit {\n  newSubject: string;\n  locStorage: any = JSON.parse(localStorage.getItem('user'));\n  userEmail: any = this.locStorage.email;\n  allSubjects:any [] = [];\n  constructor(\n    private service: DiscussonService,\n    private toast: ToastrService\n  ) {\n    this.getAllSubjects();\n   }\n\n  ngOnInit() {\n     \n  }\n\n  createSubject() {\n    const subject = {\n      subject: this.newSubject,\n      email: this.userEmail\n    };\n    if (this.newSubject == null || this.newSubject == undefined) {\n      this.toast.error(\"Subject can't be blank\", 'Discussion', { positionClass: 'toast-top-right', timeOut: 1000 });\n      return false;\n    }\n    this.service.addNewSubject(subject).subscribe(data => {\n      if (data.success) {\n        this.toast.success('Successfully created new subject', 'Discussion', { positionClass: 'toast-top-right', timeOut: 1000 });\n        this.getAllSubjects();\n        this.newSubject = null;\n      } else {\n        this.toast.error('Error found while creating this subject', 'Discussion', { positionClass: 'toast-top-right', timeOut: 1000 });\n      }\n    });\n\n  }\n\n  getAllSubjects() {\n    this.service.getAllSubjects().subscribe(subjects => {\n      if (subjects.success) {\n        this.allSubjects = subjects.data;\n      } else {\n        this.toast.error(subjects.msg, 'Discussion', { positionClass: 'toast-top-right', timeOut: 1000 });\n      }\n    });\n  }\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { Router, CanActivate } from \"@angular/router\";\r\nimport { AuthService } from \"../services/auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private auth: AuthService,\r\n        private router: Router\r\n    ) {}\r\n\r\n    canActivate() {\r\n        this.auth.loadToken();\r\n        \r\n        if(this.auth.loggedIn()) {\r\n            return true;\r\n        } \r\n        this.router.navigate(['/login']);\r\n        return false;\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<p>\\n  home works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"html,\\r\\nbody {\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\nbody {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  padding-top: 40px;\\r\\n  padding-bottom: 40px;\\r\\n  background-color: #f5f5f5;\\r\\n}\\r\\n\\r\\n.form-signin {\\r\\n  width: 100%;\\r\\n  max-width: 330px;\\r\\n  padding: 15px;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.form-signin .checkbox {\\r\\n  font-weight: 400;\\r\\n}\\r\\n\\r\\n.form-signin .form-control {\\r\\n  position: relative;\\r\\n  box-sizing: border-box;\\r\\n  height: auto;\\r\\n  padding: 10px;\\r\\n  font-size: 16px;\\r\\n}\\r\\n\\r\\n.form-signin .form-control:focus {\\r\\n  z-index: 2;\\r\\n}\\r\\n\\r\\n.form-signin input[type=\\\"email\\\"] {\\r\\n  margin-bottom: -1px;\\r\\n  border-bottom-right-radius: 0;\\r\\n  border-bottom-left-radius: 0;\\r\\n  \\r\\n}\\r\\n\\r\\n.form-signin input[type=\\\"password\\\"] {\\r\\n  margin-bottom: 10px;\\r\\n  border-top-left-radius: 0;\\r\\n  border-top-right-radius: 0;\\r\\n}\\r\\n\\r\\n.form-signin input[type=\\\"text\\\"] {\\r\\n    margin-bottom: -1px;\\r\\n    border-bottom-right-radius: 0;\\r\\n    border-bottom-left-radius: 0;\\r\\n  }\"","module.exports = \"<div class=\\\"container text-center\\\">\\n  <form class=\\\"form-signin\\\" (submit)=\\\"onLoginSubmit()\\\">\\n    <img src=\\\"{{appLogo}}\\\" alt=\\\"\\\" width=\\\"90\\\" height=\\\"90\\\">\\n    <h1 class=\\\"h3 mb-3 font-weight-normal\\\">Login</h1>\\n    <label for=\\\"inputUsername\\\" class=\\\"sr-only\\\">Username</label>\\n    <input type=\\\"text\\\" id=\\\"inputUsername\\\" autofocus class=\\\"form-control\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" required>\\n    <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\n    <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" required>\\n    <div class=\\\"checkbox mb-3\\\">\\n      <!-- <label>\\n        <input type=\\\"checkbox\\\" value=\\\"remember-me\\\"> Remember me\\n      </label> -->\\n      Don't have an account? <a [routerLink]=\\\"['/register']\\\">Sign Up</a>\\n    </div>\\n    <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\">Login</button>\\n    <p class=\\\"mt-5 mb-3 text-muted\\\">&copy; 2017-2018</p>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../services/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\nimport { ValidateService } from \"../services/validate.service\";\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: string;\n  password: string;\n  appLogo:string;\n  constructor(\n    private auth: AuthService,\n    private flashMsg: FlashMessagesService,\n    private router: Router,\n    private toastr: ToastrService,\n    private validate:ValidateService\n  ) {\n    this.appLogo='/assets/dictologo.png';\n   }\n\n  ngOnInit() {\n    this.auth.loggedIn();\n  }\n\n  onLoginSubmit() {\n    const user = {\n      username: this.username,\n      password: this.password\n    };\n    if(!this.validate.validateLoginCreds(user)) {\n      this.toastr.error('Username and password is required!', 'Login',{positionClass:'toast-top-center'});\n      return;\n    }\n\n    this.auth.authenticateUser(user).subscribe(data => {\n      if (data.success) {\n        this.auth.storeUserData(data.token, data.user);\n        this.toastr.success('Now you are logged in!', 'Login',{positionClass:'toast-top-right', timeOut:1000} );\n        this.router.navigate(['dashboard']);\n      } else {\n        this.toastr.error(data.msg, 'Login',{positionClass:'toast-top-center'} );\n        this.router.navigate(['login']);\n      }\n\n    });\n  }\n}\n","module.exports = \".btn-newTag{\\r\\n    color: #ffffff;\\r\\n    font-weight: 700;\\r\\n    font-size: 10px;\\r\\n    text-decoration: none;\\r\\n}\\r\\n.new-tagText{\\r\\n    text-align: right;\\r\\n}\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <!-- SideBar -->\\n    <app-sidebar></app-sidebar>\\n    <!-- Sidebar -->\\n\\n    <main role=\\\"main\\\" class=\\\"col-md-9 ml-sm-auto col-lg-10 px-4\\\">\\n      <div class=\\\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3\\\">\\n        <!-- <h1 class=\\\"h2\\\">Dashboard</h1>\\n        <div class=\\\"btn-toolbar mb-2 mb-md-0\\\">\\n          <div class=\\\"btn-group mr-2\\\">\\n            <button class=\\\"btn btn-sm btn-outline-secondary\\\">Share</button>\\n            <button class=\\\"btn btn-sm btn-outline-secondary\\\">Export</button>\\n          </div>\\n          <button class=\\\"btn btn-sm btn-outline-secondary dropdown-toggle\\\">\\n            <span data-feather=\\\"calendar\\\"></span>\\n            This week\\n          </button>\\n        </div> -->\\n      </div>\\n\\n      <!-- <canvas class=\\\"my-4 w-100\\\" id=\\\"myChart\\\" width=\\\"900\\\" height=\\\"380\\\"></canvas> -->\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"jumbotron text-center\\\">\\n            <h1 class=\\\"display-4\\\">Add Keywords</h1>\\n            <flash-messages></flash-messages>\\n            <form (submit)=\\\"onAddWordSubmit()\\\">\\n              <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newWord\\\" name=\\\"newWord\\\" placeholder=\\\"Enetr New Keyword!\\\" #nativeElementWord>\\n              </div>\\n              <div class=\\\"panel panel-default\\\">\\n                <!-- List group -->\\n                <!-- <span>\\n                        <a data-href=\\\"#\\\" class=\\\"btn btn-success btn-sm btn-newTag\\\" (click)=\\\"addNewTag()\\\" style=\\\"float:right;\\\">New Tag</a>\\n                      </span> -->\\n                <ul class=\\\"list-group\\\">\\n                  <li class=\\\"list-group-item item-copy\\\" *ngFor=\\\"let tag of tags;let i = index\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control new-tagText\\\"  [(ngModel)]=\\\"tag.word\\\" name=\\\"word{{i}}\\\" #name=\\\"ngModel\\\" placeholder=\\\"New Tag...\\\">\\n                        <span class=\\\"badge badge-danger ms-pointer\\\" style=\\\"float:right;margin-top:5px;\\\" (click)=\\\"removeTag(tag)\\\">Remove</span>\\n                    </div>\\n                  </li>\\n                </ul>\\n              </div>\\n              <br>\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-12\\\">\\n                    <!-- <div class=\\\"form-group\\\"> -->\\n                    <input type=\\\"text\\\" class=\\\"form-control new-tagText\\\" [(ngModel)]=\\\"newTag\\\" name=\\\"newTag\\\" placeholder=\\\"New Tag...\\\">\\n                    <br>\\n                    <a data-href=\\\"#\\\" class=\\\"btn btn-success btn-sm btn-newTag\\\" (click)=\\\"addNewTag()\\\" style=\\\"float:right;\\\">Add\\n                      Tag</a>\\n                    <!-- </div> -->\\n                  </div>\\n                </div>\\n              </div>\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-lg\\\" *ngIf=\\\"tags.length>0\\\" role=\\\"button\\\">Submit</button>\\n            </form>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n          <h6 class=\\\"display-4\\\">All Suggestions</h6>\\n          <div class=\\\"table-responsive\\\" style=\\\"overflow: auto; max-height: 300px;\\\">\\n            <table class=\\\"table table-striped table-sm\\\">\\n              <thead>\\n                <th>Word</th>\\n                <th>Suggested</th>\\n                <th class=\\\"text-center\\\">Action</th>\\n              </thead>\\n              <tbody>\\n                <tr *ngIf=\\\"suggestions.length==0\\\">\\n                  <td colspan=\\\"3\\\">\\n                    No word suggestions!\\n                  </td>\\n                </tr>\\n                <tr *ngFor=\\\"let word of suggestions\\\">\\n                  <td>{{word.word}}</td>\\n                  <td>{{word.email}}</td>\\n                  <td class=\\\"text-center\\\">\\n                    <span class=\\\"badge badge-success ms-pointer\\\" style=\\\"margin-right:5px;\\\" (click)=\\\"acceptSuggestion(word.word)\\\">Accept</span>\\n                    <span class=\\\"badge badge-danger ms-pointer\\\" (click)=\\\"regectSuggestion(word.word)\\\">Reject</span>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </main>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { AuthService } from '../services/auth.service'\nimport { ManageService } from '../services/manage/manage.service'\nimport { FlashMessagesService } from \"angular2-flash-messages\";\nimport { ToastrService } from 'ngx-toastr';\n\nimport { empty } from 'rxjs';\n\n@Component({\n  selector: 'app-manage',\n  templateUrl: './manage.component.html',\n  styleUrls: ['./manage.component.css']\n})\nexport class ManageComponent implements OnInit {\n  @ViewChild('nativeElementWord')\n  @ViewChild('nativeElementWord')\n  nativeElementWord: any;\n  @Input('formArrayName')\n  // native elemnts\n  // Define\n  newWord: String;\n  tags: any[] = [];\n  newTag: String;\n  suggestions: any[] = [];\n  ifSuggested: boolean = false;\n\n  // end\n  constructor(\n    private auth: AuthService,\n    private service: ManageService,\n    private flashMsg: FlashMessagesService,\n    private toast: ToastrService\n  ) { }\n\n  ngOnInit() {\n    this.showAllSuggestedWords();\n  }\n  addNewTag() {\n\n    if (this.newTag === undefined || this.newTag === null) {\n      this.toast.warning('Tag cannot be blank', 'Word', { positionClass: 'toast-top-right', timeOut: 1000 });\n      return false;\n    }\n    this.nativeElementWord.nativeElement.focus()\n    this.tags.push({ 'word': this.newTag });\n    this.newTag = '';\n\n  }\n  onAddWordSubmit() {\n    const newWord = {\n      word: this.newWord,\n      tags: this.tags\n    }\n    if (this.newWord == undefined || this.newWord == null) {\n      this.toast.error('Please enter a word', 'Word', { positionClass: 'toast-top-right', timeOut: 1000 });\n      this.nativeElementWord.nativeElement.focus();\n      return false;\n    }\n    if (this.ifSuggested) {\n\n      this.service.addNewSuggestedWord(newWord).subscribe(data => {\n        if (data.success) {\n          this.toast.success('New Word Successfully Added', 'Word', { positionClass: 'toast-top-right', timeOut: 1000 });\n          this.service.changeSuggestedWordStatus(newWord).subscribe(data => {\n            if (data.success) {\n              this.toast.success('Suggestion updated', 'Word', { positionClass: 'toast-top-right', timeOut: 1000 });\n              this.showAllSuggestedWords();\n            } else {\n              this.toast.error('Failed to update the suggestion status', 'Word', { positionClass: 'toast-top-right', timeOut: 1000 });\n            }\n          });\n          this.newWord = '';\n          this.tags = [];\n          this.ifSuggested = false;\n        } else {\n          this.toast.error('Error found while adding this word', 'Word', { positionClass: 'toast-top-right', timeOut: 1000 });\n          this.ifSuggested = false;\n        }\n      });\n    } else {\n\n      this.service.addNewWord(newWord).subscribe(data => {\n        if (data.success) {\n          this.toast.success('New Word Successfully Added', 'Word', { positionClass: 'toast-top-right', timeOut: 1000 });\n          this.ifSuggested = false;\n        } else {\n          this.toast.error('Error found while adding this word', 'Word', { positionClass: 'toast-top-right', timeOut: 1000 });\n          this.ifSuggested = false;\n        }\n      });\n    }\n\n  }\n\n  showAllSuggestedWords() {\n    this.service.showAllSuggestedWords().subscribe(suggestions => {\n      this.suggestions = suggestions;\n    });\n  }\n\n  acceptSuggestion(word) {\n    this.newWord = word;\n    this.ifSuggested = true;\n    this.toast.success('Save to accept!', 'Suggestion', { positionClass: 'toast-top-right' });\n    this.nativeElementWord.nativeElement.focus();\n  }\n\n  regectSuggestion(word) {\n    const reject={\n      word:word\n    };\n    this.service.rejectSuggestion(reject).subscribe(data => {\n      if (data.success) {\n        this.toast.success(data.msg, 'Suggestion', { positionClass: 'toast-top-right', timeOut: 1000 });\n        this.showAllSuggestedWords();\n      } else {\n        this.toast.success(data.msg, 'Suggestion', { positionClass: 'toast-top-right', timeOut: 1000 });\n      }\n    });\n  }\n\n  removeTag(word) {\n    this.tags.splice(this.tags.indexOf(word), 1);\n  }\n  trackByFn(index, item) {\n    return index; // or item.id\n  }\n}\n","module.exports = \".log-out{\\r\\n    cursor: pointer;\\r\\n    text-decoration: none;\\r\\n}\"","module.exports = \"<!-- <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" [routerLinkActive]=\\\"['active']\\\" [routerLink]=\\\"['/dashboard']\\\">Dicto</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarText\\\" aria-controls=\\\"navbarText\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarText\\\">\\n    \\n    <span class=\\\"navbar-text\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"!auth.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard </a>\\n        </li>\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"!auth.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile </a>\\n        </li>\\n\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"auth.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">Login </a>\\n        </li>\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"auth.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/register']\\\">Register </a>\\n        </li>\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"!auth.loggedIn()\\\">\\n          <a class=\\\"nav-link log-out\\\"  (click)=\\\"onLogOutClick()\\\">Logout </a>\\n        </li>\\n      </ul>\\n    </span>\\n  </div>\\n</nav> -->\\n<nav class=\\\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\\\">\\n  <a class=\\\"navbar-brand col-sm-3 col-md-2 mr-0\\\" [routerLink]=\\\"['/dashboard']\\\">{{email}}</a>\\n  \\n  <ul class=\\\"navbar-nav px-3\\\">\\n    <li class=\\\"nav-item text-nowrap\\\">\\n      <a class=\\\"nav-link log-out\\\" (click)=\\\"onLogOutClick()\\\">Sign out</a>\\n    </li>\\n  </ul>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../services/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  locStorage: any = JSON.parse(localStorage.getItem('user'));\n  email: any = this.locStorage.email;\n  constructor(\n    private auth: AuthService,\n    private flashMsg: FlashMessagesService,\n    private router: Router,\n    private toast: ToastrService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  onLogOutClick() {\n    this.auth.logOut();\n    this.toast.success('Logout Successfull!', 'Logut', { positionClass: 'toast-top-right', timeOut: 1000 });\n    this.router.navigate(['/login']);\n  }\n}\n","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <!-- SideBar -->\\n    <app-sidebar></app-sidebar>\\n    <!-- Sidebar -->\\n\\n    <main role=\\\"main\\\" class=\\\"col-md-9 ml-sm-auto col-lg-10 px-4\\\">\\n      <div class=\\\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3\\\">\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"user\\\">\\n        <div class=\\\"col-md-4\\\">\\n          ss\\n        </div>\\n        <div class=\\\"col-md-4\\\" class=\\\"text-center\\\">\\n          <div class=\\\"alert alert-primary\\\" role=\\\"alert\\\">\\n            <h5>{{user.email}}</h5>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n          ss\\n        </div>\\n      </div>\\n    </main>\\n  </div>\\n</div>\\n<!-- <div *ngIf=\\\"user\\\">\\n  <h1>{{user.name}}</h1>\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\">Username : {{user.username}}</li>\\n    <li class=\\\"list-group-item\\\">Email : {{user.email}}</li>\\n  </ul>\\n</div> -->\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../services/auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user:Object;\n\n  constructor(\n    private auth:AuthService,\n    private router:Router\n  ) { }\n\n  ngOnInit() {\n    this.auth.loggedIn();\n    \n    this.auth.getProfile().subscribe(profile => {\n      this.user = profile.user;\n    }, err =>{\n      console.error(err);\n      return false;\n    });\n  }\n\n}\n","module.exports = \"html,\\r\\nbody {\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\nbody {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  padding-top: 40px;\\r\\n  padding-bottom: 40px;\\r\\n  background-color: #f5f5f5;\\r\\n}\\r\\n\\r\\n.form-signin {\\r\\n  width: 100%;\\r\\n  max-width: 330px;\\r\\n  padding: 15px;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.form-signin .checkbox {\\r\\n  font-weight: 400;\\r\\n}\\r\\n\\r\\n.form-signin .form-control {\\r\\n  position: relative;\\r\\n  box-sizing: border-box;\\r\\n  height: auto;\\r\\n  padding: 10px;\\r\\n  font-size: 16px;\\r\\n}\\r\\n\\r\\n.form-signin .form-control:focus {\\r\\n  z-index: 2;\\r\\n}\\r\\n\\r\\n.form-signin input[type=\\\"email\\\"] {\\r\\n  margin-bottom: -1px;\\r\\n  border-bottom-right-radius: 0;\\r\\n  border-bottom-left-radius: 0;\\r\\n  border-top-left-radius: 0;\\r\\n  border-top-right-radius: 0;\\r\\n}\\r\\n\\r\\n.form-signin input[type=\\\"password\\\"] {\\r\\n  margin-bottom: 10px;\\r\\n  border-top-left-radius: 0;\\r\\n  border-top-right-radius: 0;\\r\\n}\\r\\n\\r\\n.form-signin input[type=\\\"text\\\"] {\\r\\n    margin-bottom: -1px;\\r\\n    border-bottom-right-radius: 0;\\r\\n    border-bottom-left-radius: 0;\\r\\n  }\"","module.exports = \"<div class=\\\"container text-center\\\">\\n  <form class=\\\"form-signin\\\" (submit)=\\\"onRegisterSubmit()\\\">\\n    <img src=\\\"{{appLogo}}\\\" alt=\\\"\\\" width=\\\"90\\\" height=\\\"90\\\">\\n    <h1 class=\\\"h3 mb-3 font-weight-normal\\\">Signup</h1>\\n    <label for=\\\"inputFullName\\\" class=\\\"sr-only\\\">Fullname</label>\\n    <input type=\\\"text\\\" id=\\\"inputFullName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Fullname\\\"\\n      required autofocus>\\n    <label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email address</label>\\n    <input type=\\\"email\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email address\\\"\\n      required>\\n    <label for=\\\"inputUsername\\\" class=\\\"sr-only\\\">Username</label>\\n    <input type=\\\"email\\\" id=\\\"inputUsername\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" placeholder=\\\"Username\\\"\\n      required>\\n    <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\n    <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\"\\n      required>\\n    <div class=\\\"checkbox mb-3\\\">\\n      <!-- <label>\\n        <input type=\\\"checkbox\\\" value=\\\"remember-me\\\"> Remember me\\n      </label> -->\\n      Already registered? <a [routerLink]=\\\"['/login']\\\">Login</a>\\n\\n    </div>\\n    <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\">Register</button>\\n    <p class=\\\"mt-5 mb-3 text-muted\\\">&copy; 2017-2018</p>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from \"../services/validate.service\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\nimport { AuthService } from \"../services/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  // Define\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n  appLogo:string;\n  // end\n\n  constructor(\n    private validateService: ValidateService,\n    private flashMsg: FlashMessagesService,\n    private auth: AuthService,\n    private router: Router,\n    private toast: ToastrService\n  ) { \n    this.appLogo='/assets/dictologo.png';\n  }\n\n  ngOnInit() {\n  }\n\n  onRegisterSubmit() {\n    const newUser = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password\n    };\n\n    if (!this.validateService.validateRegister(newUser)) {\n      this.toast.error('Please fill all fields!', 'Signup', { positionClass: 'toast-top-center' });\n      return false;\n    };\n\n    if (!this.validateService.validateEmail(newUser.email)) {\n      this.toast.error('Email is not valid!', 'Signup', { positionClass: 'toast-top-center' });\n      return false;\n    }\n\n    this.auth.registerUser(newUser).subscribe(data => {\n      if (data.success) {\n        this.toast.success('Registration Successful, You can login now!', 'Login', { positionClass: 'toast-top-center' });\n        this.resetForm();\n        this.router.navigate(['/login']);\n      } else {\n        this.toast.error(data.msg, 'Signup', { positionClass: 'toast-top-center' });\n      }\n    });\n  }\n  resetForm() {\n    this.name = '';\n    this.email = '';\n    this.username = '';\n    this.password = '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from \"@angular/http\";\nimport { map } from \"rxjs/operators\";\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  \n  authToken: any;\n  user: any;\n  // baseUrl: string = 'http://192.168.0.5:8000/';\n  baseUrl: string = 'http://localhost:8000/';\n  constructor(\n    private http: Http,\n    // public jwtHelper:JwtHelperService \n  ) { }\n\n  registerUser(user) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post(this.baseUrl + 'users/register', user, { headers: headers })\n      .pipe(map(res => res.json()));\n  }\n\n  authenticateUser(user) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post(this.baseUrl + 'users/authenticate', user, { headers: headers })\n      .pipe(map(res => res.json()));\n  }\n\n  getProfile() {\n    let headers = new Headers();\n    this.loadToken();\n    headers.append('Authorization', this.authToken);\n    headers.append('Content-Type', 'application/json');\n    return this.http.get(this.baseUrl + 'users/profile', { headers: headers })\n      .pipe(map(res => res.json()));\n  }\n\n  storeUserData(token, user) {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  loggedIn() {\n    this.loadToken();\n    const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(this.authToken);\n    // const expirationDate = helper.getTokenExpirationDate(this.authToken);\n    const isExpired = helper.isTokenExpired(this.authToken);\n\n    return !isExpired;\n  }\n\n  logOut() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from \"@angular/http\";\nimport { map } from \"rxjs/operators\";\nimport { AuthService } from \"../auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DiscussonService {\n\n  // baseUrl: string = 'http://192.168.0.5:8000/';\n  baseUrl: string = 'http://localhost:8000/';\n\n  constructor(\n    private http: Http,\n    private auth:AuthService\n  ) { }\n\n  addNewSubject(subject) {\n    this.auth.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post(this.baseUrl + 'api/discussion/newsubject', subject, { headers: headers })\n      .pipe(map(res => res.json()));\n  }\n\n  getAllSubjects() {\n    this.auth.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.get(this.baseUrl + 'api/discussion/getsubjects', { headers: headers })\n      .pipe(map(res => res.json()));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from \"@angular/http\";\nimport { map } from \"rxjs/operators\";\nimport { AuthService } from \"../auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ManageService {\n\n  // baseUrl: string = 'http://192.168.0.5:8000/';\n  baseUrl: string = 'http://localhost:8000/';\n  constructor(\n    private http: Http,\n    private auth:AuthService\n  ) { }\n\n  addNewWord(word) {\n    this.auth.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post(this.baseUrl + 'api/manage/words', word, { headers: headers })\n      .pipe(map(res => res.json()));\n  }\n\n  findWordByName(word) {\n    // console.log(word);\n    \n    this.auth.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post(this.baseUrl + 'api/manage/getword', word, { headers: headers })\n      .pipe(map(res => res.json()));\n  }\n\n  getAllWords() {\n    this.auth.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.get(this.baseUrl + 'api/manage/getwords', { headers: headers })\n      .pipe(map(res => res.json()));\n  }\n  // Suggestions\n  makeSuggetion(row) {\n    this.auth.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post(this.baseUrl + 'api/suggestions/make', row, { headers: headers })\n      .pipe(map(res => res.json()));\n  }\n\n  getAllSuggetionsByEmail(email) {\n    this.auth.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post(this.baseUrl + 'api/suggestions/getsuggestions', email, { headers: headers })\n      .pipe(map(res => res.json()));\n  }\n  showAllSuggestedWords() {\n    this.auth.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.get(this.baseUrl + 'api/suggestions/getallsuggestions', { headers: headers })\n      .pipe(map(res => res.json()));\n  }\n\n  addNewSuggestedWord(word) {\n    this.auth.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post(this.baseUrl + 'api/manage/addnewsuggestedword', word, { headers: headers })\n      .pipe(map(res => res.json()));\n  }\n\n  changeSuggestedWordStatus(word) {\n    this.auth.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.put(this.baseUrl + 'api/suggestions/updatesuggestedwordstatus', word, { headers: headers })\n      .pipe(map(res => res.json()));\n  }\n\n  rejectSuggestion(word) {\n    this.auth.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.put(this.baseUrl + 'api/suggestions/rejectsuggestion', word, { headers: headers })\n      .pipe(map(res => res.json()));\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if (user.name == undefined || user.email == undefined || user.username == undefined || user.password == undefined) {\n      return false;\n    } else{\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    const regEx =/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n    return regEx.test(email);\n  }\n\n  validateLoginCreds(user) {\n    if(user.username == undefined || user.password == undefined) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"col-md-2 d-none d-md-block bg-light sidebar\\\">\\n  <div class=\\\"sidebar-sticky\\\">\\n    <ul class=\\\"nav flex-column\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" [routerLink]=\\\"['/dashboard']\\\">\\n          <i class=\\\"fa fa-tachometer\\\" aria-hidden=\\\"true\\\"></i>\\n          Dashboard <span class=\\\"sr-only\\\">(current)</span>\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"adminEmail=='admin@dicto.app'\\\">\\n        <a class=\\\"nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" [routerLink]=\\\"['/manage']\\\">\\n          <i class=\\\"fa fa-cogs\\\" aria-hidden=\\\"true\\\"></i>\\n          Manage\\n        </a>\\n      </li>\\n      <!-- <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" [routerLink]=\\\"['/discuss']\\\">\\n          <i class=\\\"fa fa-comments\\\" aria-hidden=\\\"true\\\"></i>\\n          Discuss\\n        </a>\\n      </li> -->\\n      <!--<li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">\\n          <span data-feather=\\\"shopping-cart\\\"></span>\\n          Products\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">\\n          <span data-feather=\\\"users\\\"></span>\\n          Customers\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">\\n          <span data-feather=\\\"bar-chart-2\\\"></span>\\n          Reports\\n        </a>\\n      </li> -->\\n      <!-- <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">\\n          <span data-feather=\\\"layers\\\"></span>\\n          Integrations\\n        </a>\\n      </li> -->\\n    </ul>\\n\\n    <!-- <h6 class=\\\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\\\">\\n      <span>Saved reports</span>\\n      <a class=\\\"d-flex align-items-center text-muted\\\" href=\\\"#\\\">\\n        <span data-feather=\\\"plus-circle\\\"></span>\\n      </a>\\n    </h6> -->\\n    <!-- <ul class=\\\"nav flex-column mb-2\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">\\n          <span data-feather=\\\"file-text\\\"></span>\\n          Current month\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">\\n          <span data-feather=\\\"file-text\\\"></span>\\n          Last quarter\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">\\n          <span data-feather=\\\"file-text\\\"></span>\\n          Social engagement\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">\\n          <span data-feather=\\\"file-text\\\"></span>\\n          Year-end sale\\n        </a>\\n      </li>\\n    </ul> -->\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n  locStorage:any=JSON.parse(localStorage.getItem('user'));\n  adminEmail=this.locStorage.email;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  suggestions works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service'\nimport { ManageService } from '../services/manage/manage.service'\n\n@Component({\n  selector: 'app-suggestions',\n  templateUrl: './suggestions.component.html',\n  styleUrls: ['./suggestions.component.css']\n})\nexport class SuggestionsComponent implements OnInit {\n  // suggestions: [] = [];\n  locStorage: any = JSON.parse(localStorage.getItem('user'));\n  constructor(\n    private service: ManageService,\n    private auth: AuthService\n  ) { }\n\n  ngOnInit() {\n    // console.log(this.locStorage.email);\n    this.service.getAllSuggetionsByEmail({email:this.locStorage.email}).subscribe(suggestions => {\n      // this.suggestions = suggestions;\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}